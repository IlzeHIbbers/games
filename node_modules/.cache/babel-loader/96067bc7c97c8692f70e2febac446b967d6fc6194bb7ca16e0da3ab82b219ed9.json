{"ast":null,"code":"import _toConsumableArray from\"/Users/ilzehibbers/Documents/GitHub/games/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/ilzehibbers/Documents/GitHub/games/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';import'./App.css';import DropZone from'./components/DropZone';import Grid from'./components/Grid';import board from'./image/board.png';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),color=_useState2[0],setColor=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),game=_useState4[0],setGame=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),columns=_useState6[0],setColumns=_useState6[1];function reset(){setColumns([['','','','','',''],['','','','','',''],['','','','','',''],['','','','','',''],['','','','','',''],['','','','','',''],['','','','','','']]);setColor('red');setGame('');}function getBottomCell(column_index){var filled=columns[column_index].filter(function(i){return i;}).length;return columns[0].length-filled-1;}function droppedToken(column_index){var cell=getBottomCell(column_index);setColumns(function(preColumns){var newColumns=_toConsumableArray(preColumns);newColumns[column_index][cell]=color;return newColumns;});if(continueMatch(column_index,cell)){setColor(function(preColor){return preColor==='red'?'yellow':'red';});}}function isMatch(direction1,direction2){return direction1+direction2>2;}function matchColor(column_index,cel_index){if(column_index<columns.length&&column_index>=0){if(cel_index<columns[0].length&&cel_index>=0){return columns[column_index][cel_index]===color;}}return false;}function checkDirection(column_index,cel_index,column_direction,cell_direction){var matched=0;for(var i=1;i<=3;i++){if(matchColor(column_index+column_direction*i,cel_index+cell_direction*i)){matched+=1;}else{i=4;}}return matched;}function isTopDown(column_index,cell_index){var top=checkDirection(column_index,cell_index,0,-1);var down=checkDirection(column_index,cell_index,0,1);return isMatch(top,down);}function isLeftRight(column_index,cell_index){var left=checkDirection(column_index,cell_index,-1,0);var right=checkDirection(column_index,cell_index,1,0);return isMatch(left,right);}function isDiaginalUp(column_index,cell_index){var bottom_left=checkDirection(column_index,cell_index,-1,1);var top_right=checkDirection(column_index,cell_index,1,-1);return isMatch(bottom_left,top_right);}function isDiaginalDown(column_index,cell_index){var bottom_left=checkDirection(column_index,cell_index,-1,-1);var top_right=checkDirection(column_index,cell_index,1,1);return isMatch(bottom_left,top_right);}function continueMatch(column_index,cel_index){if(isLeftRight(column_index,cel_index)||isTopDown(column_index,cel_index)||isDiaginalDown(column_index,cel_index)||isDiaginalUp(column_index,cel_index)){setGame(color+' won!!');return false;}else{var empty=columns.map(function(column){return column.filter(function(cell){return!cell;}).length;}).filter(function(i){return i>0;}).length>0;if(!empty){setGame('draw');return false;}}return true;}useEffect(function(){reset();},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"header\",children:[/*#__PURE__*/_jsx(\"p\",{children:game||color+'\\'s turn'}),/*#__PURE__*/_jsx(\"p\",{className:\"\".concat(game?'green':''),onClick:reset,children:\"New Game\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"board \".concat(game?'disable':''),children:[/*#__PURE__*/_jsx(DropZone,{droppedToken:droppedToken,color:color,getBottomCell:getBottomCell,columns:columns}),/*#__PURE__*/_jsx(\"img\",{className:\"board-img\",src:board,alt:\"board_img\"}),/*#__PURE__*/_jsx(Grid,{columns:columns})]})]});}export default App;","map":{"version":3,"names":["React","useEffect","useState","DropZone","Grid","board","App","color","setColor","game","setGame","columns","setColumns","reset","getBottomCell","column_index","filled","filter","i","length","droppedToken","cell","preColumns","newColumns","continueMatch","preColor","isMatch","direction1","direction2","matchColor","cel_index","checkDirection","column_direction","cell_direction","matched","isTopDown","cell_index","top","down","isLeftRight","left","right","isDiaginalUp","bottom_left","top_right","isDiaginalDown","empty","map","column"],"sources":["/Users/ilzehibbers/Documents/GitHub/games/src/App.tsx"],"sourcesContent":["import React, {useEffect, useState } from 'react';\nimport './App.css';\nimport DropZone from './components/DropZone';\nimport Grid from './components/Grid';\nimport board from './image/board.png';\n\ntype column = Array<string>;\ntype columns = Array<column>;\n\nfunction App() {\n  const [color, setColor] =  useState<string>('');\n  const [game, setGame] = useState<string>('');\n  const [columns, setColumns] = useState<columns>([]);\n\n  function reset(){\n    setColumns([['','','','','',''],\n    ['','','','','',''],\n    ['','','','','',''],\n    ['','','','','',''],\n    ['','','','','',''],\n    ['','','','','',''],\n    ['','','','','','']]);\n    setColor('red');\n    setGame('');\n  }\n\n  function getBottomCell(column_index: number) {\n    const filled = columns[column_index].filter(i => i).length;\n    return columns[0].length - filled - 1;\n  }\n\n  function droppedToken(column_index: number) {\n    const cell =  getBottomCell(column_index);\n    setColumns(preColumns => {\n      const newColumns = [...preColumns];\n      newColumns[column_index][cell] = color;\n      return newColumns;\n    });\n    if (continueMatch(column_index, cell)) {\n      setColor(preColor =>  preColor === 'red' ? 'yellow' : 'red');\n    }\n  }\n\n  function isMatch (direction1: number, direction2: number) {  \n      return direction1 + direction2 > 2\n  }\n  \n  function matchColor(column_index: number, cel_index: number) {\n    if(column_index < columns.length && column_index >= 0) {\n      if (cel_index < columns[0].length && cel_index >= 0) {\n        return columns[column_index][cel_index] === color;\n      }\n    } \n    return false; \n  }\n\n  function checkDirection(column_index: number, cel_index: number, column_direction: number, cell_direction: number) {\n    let matched = 0; \n    for (let i: number = 1; i <= 3; i++) {  \n        if(matchColor(column_index + (column_direction*i) , cel_index + (cell_direction*i))) {\n          matched += 1;\n        }\n        else {\n          i = 4;\n        }\n    } \n    return matched\n  }\n\n  function isTopDown(column_index: number, cell_index: number) {\n    let top = checkDirection(column_index, cell_index, 0, -1);\n    let down = checkDirection(column_index, cell_index, 0, 1);\n    return isMatch(top, down);\n  }\n\n  function isLeftRight(column_index: number, cell_index: number) {\n    let left = checkDirection(column_index, cell_index, -1, 0);\n    let right = checkDirection(column_index, cell_index, 1, 0);\n    return isMatch(left, right);\n  }\n\n  function isDiaginalUp(column_index: number, cell_index: number) {\n    let bottom_left = checkDirection(column_index, cell_index, -1, 1);\n    let top_right = checkDirection(column_index, cell_index, 1, -1);\n    return isMatch(bottom_left, top_right);\n  }\n\n  function isDiaginalDown(column_index: number, cell_index: number) {\n    let bottom_left = checkDirection(column_index, cell_index, -1, -1);\n    let top_right = checkDirection(column_index, cell_index, 1, 1);\n    return isMatch(bottom_left, top_right);\n  }\n\n  function continueMatch(column_index: number, cel_index: number) {\n    if(isLeftRight(column_index, cel_index) || isTopDown(column_index, cel_index) \n    || isDiaginalDown(column_index, cel_index) || isDiaginalUp(column_index, cel_index)) {\n      setGame(color + ' won!!');\n      return false;\n    }\n    else { \n      const empty = columns.map(column => column\n        .filter(cell => !cell).length)\n        .filter(i => i> 0).length > 0;\n\n      if(!empty) {\n        setGame('draw');\n        return false;\n      }  \n    }\n    return true;\n  }\n\n  useEffect(()=>{reset()},[])\n\n  return (\n    <div className=\"App\">\n      <div className='header'>\n        <p>{game ||  color + '\\'s turn'}</p>\n        <p className={`${game ? 'green' : '' }`} onClick={reset}>New Game</p>\n      </div>\n      <div className={`board ${game ? 'disable' : '' }`}>\n        <DropZone droppedToken={droppedToken} color={color} getBottomCell={getBottomCell} columns={columns}/>\n        <img className='board-img' src={board} alt=\"board_img\"></img>\n        <Grid columns={columns}/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}