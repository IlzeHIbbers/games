{"ast":null,"code":"var _jsxFileName = \"/Users/ilzehibbers/Documents/GitHub/fourIn/four-row/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport DropZone from './components/DropZone';\nimport Grid from './components/Grid';\nimport board from './image/board.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [color, setColor] = useState('');\n  const [player, setPlayer] = useState(true);\n  const [game, setGame] = useState('');\n  const [columns, setColumns] = useState([]);\n  function reset() {\n    setColumns([['', '', '', '', '', ''], ['', '', '', '', '', ''], ['', '', '', '', '', ''], ['', '', '', '', '', ''], ['', '', '', '', '', ''], ['', '', '', '', '', ''], ['', '', '', '', '', '']]);\n    setColor('red');\n    setPlayer(true);\n    setGame('');\n  }\n  function getBottomCell(column_index) {\n    const filled = columns[column_index].filter(i => i).length;\n    return columns[0].length - filled - 1;\n  }\n  function droppedToken(column_index) {\n    const cell = getBottomCell(column_index);\n    setColumns(preColumns => {\n      const newColumns = [...preColumns];\n      newColumns[column_index][cell] = color;\n      return newColumns;\n    });\n    if (continueMatch(column_index, cell)) {\n      setPlayer(prePlayer => !prePlayer);\n      setColor(preColor => preColor === 'red' ? 'yellow' : 'red');\n    }\n  }\n  function isMatch(direction1, direction2) {\n    return direction1 + direction2 > 2;\n  }\n  function matchColor(column_index, cel_index) {\n    if (column_index < columns.length && column_index >= 0) {\n      if (cel_index < columns[0].length && cel_index >= 0) {\n        console.log('checking:', columns[column_index][cel_index], column_index, cel_index);\n        return columns[column_index][cel_index] === color;\n      }\n    }\n    return false;\n  }\n  function checkDirection(column_index, cel_index, column_direction, cell_direction) {\n    let matched = 0;\n    for (let i = 1; i <= 3; i++) {\n      if (matchColor(column_index + column_direction * i, cel_index + cell_direction * i)) {\n        matched += 1;\n      } else {\n        i = 4;\n      }\n    }\n    return matched;\n  }\n  function isTopDown(column_index, cell_index) {\n    let top = checkDirection(column_index, cell_index, 0, -1);\n    let down = checkDirection(column_index, cell_index, 0, 1);\n    return isMatch(top, down);\n  }\n  function isLeftRight(column_index, cell_index) {\n    let left = checkDirection(column_index, cell_index, -1, 0);\n    let right = checkDirection(column_index, cell_index, 1, 0);\n    return isMatch(left, right);\n  }\n  function isDiaginalUp(column_index, cell_index) {\n    let bottom_left = checkDirection(column_index, cell_index, -1, 1);\n    let top_right = checkDirection(column_index, cell_index, 1, -1);\n    return isMatch(bottom_left, top_right);\n  }\n  function isDiaginalDown(column_index, cell_index) {\n    let bottom_left = checkDirection(column_index, cell_index, -1, -1);\n    let top_right = checkDirection(column_index, cell_index, 1, 1);\n    return isMatch(bottom_left, top_right);\n  }\n  function continueMatch(column_index, cel_index) {\n    if (isLeftRight(column_index, cel_index) || isTopDown(column_index, cel_index) || isDiaginalDown(column_index, cel_index) || isDiaginalUp(column_index, cel_index)) {\n      setGame('Player ' + (player ? '1' : '2') + ' Won!!');\n      return false;\n    } else {\n      const empty = columns.map(column => column.filter(cell => !cell).length).filter(i => i > 0).length > 0;\n      if (!empty) {\n        setGame('draw');\n        return false;\n      }\n    }\n    return true;\n  }\n  useEffect(() => {\n    reset();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: game || color + '\\'s turn'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: `${game ? 'green' : ''}`,\n        onClick: reset,\n        children: \"New Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `board ${game ? 'disable' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(DropZone, {\n        droppedToken: droppedToken,\n        color: color,\n        getBottomCell: getBottomCell,\n        columns: columns\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"board-img\",\n        src: board,\n        alt: \"board_img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        columns: columns\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"NG0l+3nlb6EQUuveapZoVj5056g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","DropZone","Grid","board","App","color","setColor","player","setPlayer","game","setGame","columns","setColumns","reset","getBottomCell","column_index","filled","filter","i","length","droppedToken","cell","preColumns","newColumns","continueMatch","prePlayer","preColor","isMatch","direction1","direction2","matchColor","cel_index","console","log","checkDirection","column_direction","cell_direction","matched","isTopDown","cell_index","top","down","isLeftRight","left","right","isDiaginalUp","bottom_left","top_right","isDiaginalDown","empty","map","column"],"sources":["/Users/ilzehibbers/Documents/GitHub/fourIn/four-row/src/App.tsx"],"sourcesContent":["import React, {useEffect, useState } from 'react';\nimport './App.css';\nimport DropZone from './components/DropZone';\nimport Grid from './components/Grid';\nimport board from './image/board.png';\n\ntype column = Array<string>;\ntype columns = Array<column>;\n\nfunction App() {\n  const [color, setColor] =  useState<string>('');\n  const [player, setPlayer] = useState<boolean>(true);\n  const [game, setGame] = useState<string>('');\n  const [columns, setColumns] = useState<columns>([]);\n\n  function reset(){\n    setColumns([['','','','','',''],\n    ['','','','','',''],\n    ['','','','','',''],\n    ['','','','','',''],\n    ['','','','','',''],\n    ['','','','','',''],\n    ['','','','','','']]);\n    setColor('red');\n    setPlayer(true);\n    setGame('');\n  }\n\n  function getBottomCell(column_index: number) {\n    const filled = columns[column_index].filter(i => i).length;\n    return columns[0].length - filled - 1;\n  }\n\n  function droppedToken(column_index: number) {\n    const cell =  getBottomCell(column_index);\n    setColumns(preColumns => {\n      const newColumns = [...preColumns];\n      newColumns[column_index][cell] = color;\n      return newColumns;\n    });\n    if (continueMatch(column_index, cell)) {\n      setPlayer(prePlayer => !prePlayer);\n      setColor(preColor =>  preColor === 'red' ? 'yellow' : 'red');\n    }\n  }\n\n  function isMatch (direction1: number, direction2: number) {  \n      return direction1 + direction2 > 2\n  }\n  \n  function matchColor(column_index: number, cel_index: number) {\n    if(column_index < columns.length && column_index >= 0) {\n      if (cel_index < columns[0].length && cel_index >= 0) {\n        console.log('checking:', columns[column_index][cel_index], column_index, cel_index);\n        return columns[column_index][cel_index] === color;\n      }\n    } \n    return false; \n  }\n\n  function checkDirection(column_index: number, cel_index: number, column_direction: number, cell_direction: number) {\n    let matched = 0; \n    for (let i: number = 1; i <= 3; i++) {  \n        if(matchColor(column_index + (column_direction*i) , cel_index + (cell_direction*i))) {\n          matched += 1;\n        }\n        else {\n          i = 4;\n        }\n    } \n    return matched\n  }\n\n  function isTopDown(column_index: number, cell_index: number) {\n    let top = checkDirection(column_index, cell_index, 0, -1);\n    let down = checkDirection(column_index, cell_index, 0, 1);\n    return isMatch(top, down);\n  }\n\n  function isLeftRight(column_index: number, cell_index: number) {\n    let left = checkDirection(column_index, cell_index, -1, 0);\n    let right = checkDirection(column_index, cell_index, 1, 0);\n    return isMatch(left, right);\n  }\n\n  function isDiaginalUp(column_index: number, cell_index: number) {\n    let bottom_left = checkDirection(column_index, cell_index, -1, 1);\n    let top_right = checkDirection(column_index, cell_index, 1, -1);\n    return isMatch(bottom_left, top_right);\n  }\n\n  function isDiaginalDown(column_index: number, cell_index: number) {\n    let bottom_left = checkDirection(column_index, cell_index, -1, -1);\n    let top_right = checkDirection(column_index, cell_index, 1, 1);\n    return isMatch(bottom_left, top_right);\n  }\n\n  function continueMatch(column_index: number, cel_index: number) {\n    if(isLeftRight(column_index, cel_index) || isTopDown(column_index, cel_index) \n    || isDiaginalDown(column_index, cel_index) || isDiaginalUp(column_index, cel_index)) {\n      setGame('Player ' + (player ? '1' : '2') + ' Won!!');\n      return false;\n    }\n    else { \n      const empty = columns.map(column => column\n        .filter(cell => !cell).length)\n        .filter(i => i> 0).length > 0;\n\n      if(!empty) {\n        setGame('draw');\n        return false;\n      }  \n    }\n    return true;\n  }\n\n  useEffect(()=>{reset()},[])\n\n  return (\n    <div className=\"App\">\n      <div className='header'>\n        <p>{game ||  color + '\\'s turn'}</p>\n        <p className={`${game ? 'green' : '' }`} onClick={reset}>New Game</p>\n      </div>\n      <div className={`board ${game ? 'disable' : '' }`}>\n        <DropZone droppedToken={droppedToken} color={color} getBottomCell={getBottomCell} columns={columns}/>\n        <img className='board-img' src={board} alt=\"board_img\"></img>\n        <Grid columns={columns}/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}