{"ast":null,"code":"import React from'react';import{jsx as _jsx}from\"react/jsx-runtime\";function Grid(props){var gridElements=props.columns.map(function(column,column_index){var cellElements=column.map(function(cell,cell_index){var key=column_index+'_'+cell_index;return/*#__PURE__*/_jsx(\"div\",{className:\"\".concat(cell,\" cell\")},key);});return/*#__PURE__*/_jsx(\"div\",{className:\"col\",children:cellElements},column_index);});return/*#__PURE__*/_jsx(\"div\",{className:\"board-grid\",children:gridElements});}export default Grid;","map":{"version":3,"names":["React","Grid","props","gridElements","columns","map","column","column_index","cellElements","cell","cell_index","key"],"sources":["/Users/ilzehibbers/Documents/GitHub/games/src/components/Grid.tsx"],"sourcesContent":["import React from 'react';\n\ntype column = Array<string>;\ntype columns = Array<column>;\n\ntype Props = {\n    columns: columns\n}\n\nfunction Grid(props: Props) {\n    const gridElements = props.columns\n    .map((column: column, column_index: number) => {\n        const cellElements = column.map((cell: string, cell_index: number) => {\n          const key = column_index + '_' + cell_index;   \n          return <div key={key} className={`${cell} cell`}></div>\n        });\n        return <div className='col' key={column_index}>\n          {cellElements}\n        </div>\n      });\n  \n    return (\n      <div className=\"board-grid\">\n        {gridElements}\n      </div>\n  );\n}\n\nexport default Grid;"],"mappings":"AAAA,MAAOA,MAAK,KAAM,OAAO,CAAC,2CAS1B,QAASC,KAAI,CAACC,KAAY,CAAE,CACxB,GAAMC,aAAY,CAAGD,KAAK,CAACE,OAAO,CACjCC,GAAG,CAAC,SAACC,MAAc,CAAEC,YAAoB,CAAK,CAC3C,GAAMC,aAAY,CAAGF,MAAM,CAACD,GAAG,CAAC,SAACI,IAAY,CAAEC,UAAkB,CAAK,CACpE,GAAMC,IAAG,CAAGJ,YAAY,CAAG,GAAG,CAAGG,UAAU,CAC3C,mBAAO,YAAe,SAAS,WAAKD,IAAI,SAAQ,EAA/BE,GAAG,CAAmC,CACzD,CAAC,CAAC,CACF,mBAAO,YAAK,SAAS,CAAC,KAAK,UACxBH,YAAY,EADkBD,YAAY,CAEvC,CACR,CAAC,CAAC,CAEJ,mBACE,YAAK,SAAS,CAAC,YAAY,UACxBJ,YAAY,EACT,CAEZ,CAEA,cAAeF,KAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}